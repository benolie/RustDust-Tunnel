name: RustDesk RDP Access

on:
  workflow_dispatch:  # Manual trigger only
  push:
    branches: [main]

jobs:
  windows-rdp:
    runs-on: windows-latest
    timeout-minutes: 345  # 5h 45m (under 6h limit)
    
    steps:
    - name: Setup RustDesk
      shell: powershell
      env:
        RUSTDESK_PWD: ${{ secrets.RUSTDESK_PASSWORD }}
      run: |
        # Download and install RustDesk
        $version = "1.2.3"
        Invoke-WebRequest "https://github.com/rustdesk/rustdesk/releases/download/$version/rustdesk-$version-windows_x64.zip" -OutFile rustdesk.zip
        Expand-Archive rustdesk.zip -DestinationPath .\rustdesk
        Start-Process -Wait -FilePath .\rustdesk\rustdesk.exe -ArgumentList "--silent-install"
        
        # Configure password
        $config = "[options]`npassword = '$env:RUSTDESK_PWD'"
        Set-Content -Path "$env:APPDATA\RustDesk\config\rustdesk.toml" -Value $config
        
        # Start service
        Start-Process "$env:APPDATA\RustDesk\rustdesk.exe" -ArgumentList "--service"
        
        # Enable RDP
        Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Get Connection Info
      id: conn-info
      shell: powershell
      run: |
        $id = Get-Content "$env:APPDATA\RustDesk\config\id_ed25519.pub" -Raw
        echo "::add-mask::$id"
        echo "id=$id" >> $env:GITHUB_OUTPUT

    - name: Show Access Details
      run: |
        echo "Connect using RustDesk with:"
        echo "ID: ${{ steps.conn-info.outputs.id }}"
        echo "Password: ${{ secrets.RUSTDESK_PASSWORD }}"
        echo "Job will auto-destroy at: $(date -d '+345 minutes' '+%H:%M %Z')"

    - name: Maintain Session
      shell: powershell
      run: |
        # Just keep alive until timeout
        Start-Sleep -Seconds 20700  # 345 minutes
